services:
  postgres:
    image: postgres:13.16
    hostname: hive-postgres
    container_name: hive-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - '5433:5432'
    volumes:
      - ./hive-db:/var/lib/postgresql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s  
    networks:
      - test-network

  metastore:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    container_name: hive-metastore
    hostname: hive-metastore
    environment:
      DB_DRIVER: postgres
      SERVICE_NAME: 'metastore'
      SERVICE_OPTS: '-Xmx1G -Djavax.jdo.option.ConnectionDriverName=org.postgresql.Driver
                     -Djavax.jdo.option.ConnectionURL=jdbc:postgresql://hive-postgres:5432/${POSTGRES_DB}
                     -Djavax.jdo.option.ConnectionUserName=${POSTGRES_USER}
                     -Djavax.jdo.option.ConnectionPassword=${POSTGRES_PASSWORD}'
    ports:
        - '9083:9083'
    volumes:
        - ./warehouse:/opt/hive/data/warehouse
    healthcheck:
      test: "netstat -lpn | grep 9083"
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - test-network

  hiveserver2:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    depends_on:
      metastore:
        condition: service_healthy
    container_name: hiveserver2
    hostname: hiveserver2
    environment:
      HIVE_SERVER2_THRIFT_PORT: 10000
      SERVICE_OPTS: '-Xmx1G -Dhive.metastore.uris=thrift://metastore:9083'
      IS_RESUME: 'true'
      SERVICE_NAME: 'hiveserver2'
    ports:
      - '10000:10000'
      - '10002:10002'
    volumes:
      - ./warehouse:/opt/hive/data/warehouse
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:10002"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - test-network

networks:
  test-network:
    name: test-network
    external: true